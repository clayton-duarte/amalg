name: Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dryRun:
        description: Run the publish workflow without publishing
        type: boolean
        required: false
        default: true
      releaseAs:
        description: Force a release of a specific version on all packages
        type: choice
        required: true
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      all:
        description: Force NX scripts to run on all packages
        type: boolean
        required: false
        default: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set SHAs
        uses: nrwl/nx-set-shas@v1

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup Git
        run: |
          git config user.name "CPD Bot"
          git config user.email "cpd@duck.com"

      - name: Install
        run: npm ci

      - name: Lint
        run: |
          npx nx affected \
          --all=${{ github.event.inputs.all || false  }} \
          -t=lint

      - name: Test
        run: |
          npx nx affected \
          --all=${{ github.event.inputs.all || false }} \
          -t=test

      - name: Build
        run: |
          npx nx affected \
          --all=${{ github.event.inputs.all || false  }} \
          -t=build

      - name: Version Auto
        if: ${{ !github.event.inputs.releaseAs }}
        run: |
          git pull --tags
          npx nx affected \
          -t=version \
          --parallel=1 \
          --all=${{ github.event.inputs.all || false  }} \
          --allowEmptyRelease=true
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version Manual
        if: github.event.inputs.releaseAs
        run: |
          git pull --tags
          npx nx affected \
          -t=version \
          --parallel=1 \
          --all=${{ github.event.inputs.all || false  }} \
          --releaseAs=${{ github.event.inputs.releaseAs }} \
          --dryRun=${{ github.event.inputs.dryRun || false  }} \
          --allowEmptyRelease=true
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup NPM
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}

      - name: Publish
        run: |
          npx nx affected \
          --all=${{ github.event.inputs.all || false  }} \
          --dry-run=${{ github.event.inputs.dryRun || false  }} \
          -t=deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
